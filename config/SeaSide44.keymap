#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE  &kp Q  &kp W           &kp E               &kp R                   &kp T                                                    &kp Y      &kp U             &kp I                   &kp O                &lt 6 P    &kp DEL
&kp TAB     &kp A  &kp S           &kp D               &lt 1 F                 &kp G                                                    &kp H      &lt 1 J           &kp K                   &kp L                &kp MINUS  &kp LG(TAB)
&mo 2       &kp Z  &mt LEFT_ALT X  &mt LEFT_CONTROL C  &mt LEFT_SHIFT V        &kp B                                                    &kp N      &mt LEFT_SHIFT M  &mt LEFT_CONTROL COMMA  &mt LEFT_ALT PERIOD  &mkp MB2   &mo 2
                   &kp LCTRL       &kp PRINTSCREEN     &mt LG(TAB) LANGUAGE_1  &lt 4 SPACE  &mt LANGUAGE_2 LEFT_SHIFT    &kp BACKSPACE  &kp ENTER                    &lt 4 LEFT_WIN
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH          &kp DOLLAR     &kp PERCENT       &kp CARET                        &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE  &kp PLUS
&trans           &kp TILDE    &kp DQT           &kp LESS_THAN  &kp GREATER_THAN  &kp EQUAL                        &kp QUESTION   &kp PIPE       &kp LBRC              &kp RBRC               &kp MINUS       &kp EQUAL
&trans           &kp GRAVE    &kp SINGLE_QUOTE  &kp COMMA      &kp PERIOD        &kp SEMICOLON                    &kp SLASH      &kp BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans          &trans
                              &trans            &trans         &trans            &trans         &trans    &trans  &trans                        &trans
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &kp F9  &kp F10  &kp F11       &kp F12                                            &kp BACKSLASH  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp CARET  &kp PERCENT
&trans  &trans  &kp F5  &kp F6   &kp F7        &kp F8                                             &kp COMMA      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp ASTRK
&trans  &trans  &kp F1  &kp F2   &kp F3        &kp F4                                             &kp PERIOD     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp MINUS  &kp SLASH
                &trans  &trans   &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT    &kp BACKSPACE  &kp NUMBER_0                 &kp EQUAL
            >;
        };

        ARROW {
            bindings = <
&trans  &kp ESCAPE      &mkp MB4                &kp UP_ARROW    &mkp MB5                 &trans                     &kp LG(LEFT_ARROW)          &kp LA(LEFT_ARROW)      &kp UP_ARROW    &kp RA(RIGHT_ARROW)      &kp RG(RIGHT_ARROW)          &kp N0
&trans  &kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END                    &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)                  &kp N1
&trans  &kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans                     &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &kp LA(LG(F))   &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))  &kp N2
                        &trans                  &trans          &trans                   &trans   &trans    &trans  &trans                                              &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans          &kp UP_ARROW    &trans           &trans                     &trans    &mkp MB3  &msc MOVE_X(5)   &trans    &trans    &kp N0
&trans  &kp HOME  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END                    &mkp MB4  &mkp MB1  &msc MOVE_Y(10)  &mkp MB2  &mkp MB5  &kp N1
&trans  &trans    &trans          &trans          &trans           &trans                     &trans    &trans    &trans           &trans    &trans    &kp N2
                  &trans          &trans          &trans           &trans   &trans    &trans  &trans              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N0
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N1
&trans  &trans  &trans  &trans  &trans  &trans                                          &trans            &trans  &trans  &trans  &trans  &kp N2
                &trans  &trans  &trans  &kp LS(LG(N5))  &kp LS(LG(N4))    &kp LC(DOWN)  &kp LC(UP_ARROW)          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N0
&trans  &trans          &trans        &trans        &trans        &trans                          &trans       &trans  &trans  &trans  &trans  &kp N1
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bootloader  &trans  &trans  &trans  &trans  &kp N2
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans               &trans
            >;
        };
    };
};
